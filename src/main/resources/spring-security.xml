<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-4.2.xsd" >

    <!--spring:http security过滤器链配置
        1) 需要拦截什么资源
        2) 什么资源什么角色权限
        3) 定制认证方式: HttpBasic, FormLogin(*)
        4) 定制登录页面, 定义登录请求地址, 定义错误处理方式
     -->
    <security:http>
        <!--pattern: 需要拦截的资源,
            access: 拦截类型(在什么情况下才可通过)
                isFullyAuthenticated() 该资源需要认证后才能访问
                isAnonymous() 只有匿名用户才可以访问
        -->
        <security:intercept-url pattern="/product/index" access="permitAll()" />
        <security:intercept-url pattern="/userLogin" access="permitAll()" />
        <security:intercept-url pattern="/**" access="isFullyAuthenticated()"/>

        <!--使用http-basic方式进行登录(认证)-->
        <!--<security:http-basic />-->
        <security:form-login login-page="/userLogin" login-processing-url="/securityLogin"/>

        <security:csrf disabled="true" />
    </security:http>

    <!--
        security:authentication-manager, 认证管理器
            1) 认证信息(账户名, 密码, 当前用户权限)
    -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:user-service>
                <security:user name="eric" authorities="ROLE_USER" password="123456" />
            </security:user-service>
        </security:authentication-provider>

    </security:authentication-manager>
</beans>